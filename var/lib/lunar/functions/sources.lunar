############################################################
#                                                          #
# This code is written for Lunar Linux, see                #
# http://www.lunar-linux.org                               #
#                                                          #
############################################################
#                                                          #
# $FUNCTIONS/sources                                       #
# includes sources, md5_verify_source                      #
#                                                          #
# 20020604                                                 #
#                                                          #
############################################################
#                                                          #
# Copyrighted Kagan Kongar 2002 under GPLv2                #
#                                                          #
############################################################

# function : sources
# usage    : sources <module_name> {MD5}
# purpose  : displays the filenames and md5sums of sources for a given module
sources()  
{
    MAX_SOURCES=${MAX_SOURCES:=100}

    run_details $1 || return 1

    for (( CNT=0; CNT<=$MAX_SOURCES; CNT++ ))
    do
       TEMP1=`echo SOURCE$CNT | sed s/SOURCE0/SOURCE/`
       TEMP2=`echo SOURCE$(( CNT+1))`
       TEMP3=`echo SOURCE$(( CNT+2))`

       eval TEMP=\$$TEMP1
       eval TEMP2=\$$TEMP2
       eval TEMP3=\$$TEMP3

       TEMP1_MD5=${TEMP1}_MD5[@]
       eval TEMP_MD5=\${$TEMP1_MD5}
       TEMP_MD5=${TEMP_MD5:=0}


       [ -n "$TEMP" ]         &&
       echo  $TEMP            &&
       [ "$2" == "MD5" ]      && 
       echo  $TEMP_MD5 

#if two consequtive empty sources, then break
       [ -z "$TEMP2" ] && [ -z "$TEMP3" ]  && {
#lets clear the array
         for (( CNT1=0; CNT1<=$CNT; CNT1++ ))
         do
            TEMP1=`echo SOURCE$CNT1 | sed s/SOURCE0/SOURCE/`
            unset $TEMP1
         done   
         break
       }
    done
}

# function : md5_verify_source
# usage    : md5_verify_source filename_1 md5_1, filename_2 md52.....
# purpose  : md5 verifies a filename
md5_verify_source()
{
   ALL_OK=true   
   while [ -n "$2" ]
   do
      verify_source $1 || return 1

      [ "$2" == "0" ]  && 
      TEMP=0           || 
      TEMP=`md5sum $SOURCE_CACHE/$1 | cut -d " " -f 1-1`
      
      [ "$TEMP" == "$2" ] || {
         message  "${PROBLEM_COLOR}Wrong md5 sum for ${FILE_COLOR}${1}" \
                   "${DEFAULT_COLOR}"
         message  "${PROBLEM_COLOR}Removing ${FILE_COLOR}${SOURCE_CACHE}/${1}" \
                  "${DEFAULT_COLOR}"
         rm -f $SOURCE_CACHE/$1 2>/dev/null                             &&
         message  "${FILE_COLOR}Removed!!${DEFAULT_COLOR}"              ||
         message  "${PROBLEM_COLOR}Unable to remove!!${DEFAULT_COLOR}" 
         ALL_OK=false
      }

      shift 2
   done
   $ALL_OK
}

