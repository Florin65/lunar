############################################################
#                                                          #
#  messages - lunar message display functions              #
#                                                          #
############################################################
#                                                          #
# this WAS the subroutines of a source based Linux distro, #
# calls Sorcerer GNU/Linux, or SGL. SGL is no longer       #
# available with GPL license. Since this script was taken  #
# before licensing scheme change, no legal problems I      #
# guess.                                                   #
#                                                          #
# the code is re-written for Lunar. The previous Copyright #
# notices are kept; just in case some code is left :=)     #
# Kagan Kongar <kongar@tsrsb.org.tr>, 20020519             #
#                                                          #
############################################################
#                                                          #
# Copyright 2001 by Kyle Sallee                            #
#                                                          #
# Parts Copyrighted Hendrik Visage 2002 under GPLv2        #
#                                                          #
# Parts Copyrighted Kagan Kongar 2002 under GPLv2          #
#                                                          #
############################################################
#                                                          #
# moved to messages.lunar by sofar 2003                    #
#                                                          #
############################################################


message() {
  [ -n "$SILENT" ] || echo  -e  "$*"
}


verbose_msg() {
  [ "$VERBOSE" != "on" ] || message "+ $*"
}


report() {
  if  [  ! -f  "$1"  ]; then
    return
  fi

  if  [  "$VIEW_REPORTS"  ==  "on"  ];  then
    VIEW_PROMPT="View $2 for ${MODULE_COLOR}${MODULE}-${VERSION_COLOR}${VERSION}${DEFAULT_COLOR}?"
    sound  REPORT
    if  query  "$VIEW_PROMPT" n; then
      view_file $1
    fi
  fi

  if  [  "$MAIL_REPORTS"  ==  "on"  ];  then
    MAILTEMP="/tmp/lunar.mail.`uuidgen`" 
    date  -u  > $MAILTEMP
    echo     >> $MAILTEMP
    cat $1   >> $MAILTEMP
    mail  -s  "Lunar Report from $HOSTNAME : $2 for $MODULE-$VERSION"  \
              $ADMIN  < $MAILTEMP  2>/dev/null
    rm -f $MAILTEMP 2>/dev/null
  fi

  true
}


query()
{
#  2 arguments
#  query  "what do you want?  "  DEFAULT

  if  [  -z  "$SILENT"  ];  then

    # message  "Press y for yes, n for no."
    if  [  -n  "$MODULE"  ];  then
      echo  -e  -n  "${MODULE_COLOR}${MODULE}${DEFAULT_COLOR}:  "
      echo  -e  -n  "${QUERY_COLOR}$1 [$2] ${DEFAULT_COLOR}"
    else
      echo  -e  -n  "${QUERY_COLOR}$1 [$2] ${DEFAULT_COLOR}"
    fi

    read   -t  $PROMPT_DELAY  -n  1  RESPONSE
    echo

    RESPONSE=${RESPONSE:=$2}
    case  $RESPONSE  in
      y|Y)  true  ;;
        *)  false ;;
    esac

  else

    echo  $2
    case  $2  in
        y|Y)  true    ;;
          *)  false   ;;
    esac

  fi
}


# function : return_error
# usage    : return_error error_string $FUNCTION
# purpose  : return info if a function is called with wrong params, exits imm.
return_error() {
   echo "$1 in function $2"
   exit
}


color()  {

  case  $1  in
    off)  unset  MODULE_COLOR
          unset  VERSION_COLOR
          unset  QUERY_COLOR
          unset  LRM_COLOR
          unset  CHECK_COLOR
          unset  RESURRECT_COLOR
          unset  FILE_COLOR
          unset  SYMLINK_COLOR
          unset  PROBLEM_COLOR
          unset  MESSAGE_COLOR
          unset  DEFAULT_COLOR
          COLOR=off
          ;;
     on)  COLOR=on
          ;;
  esac

}


sound()  {

  case  $SOUND  in
    on)  SOUND_FILE=$SOUND_DIRECTORY/$SOUND_THEME/$1
         if  [  -e  $SOUND_FILE  ];  then
           (  cd  /  ;  play  $SOUND_FILE  & )
         fi
    ;;
  esac

}


sound()  {

  case  $SOUND  in
    on)  SOUND_FILE=$SOUND_DIRECTORY/$SOUND_THEME/$1
         if  [  -e  $SOUND_FILE  ];  then
           (  cd  /  ;  play  $SOUND_FILE  & )
         fi
    ;;
  esac

}


