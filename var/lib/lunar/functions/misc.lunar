#!/bin/bash
#                                                          #
# misc.lunar - Lunar subroutines                           #
#                                                          #
############################################################
#                                                          #
# this WAS the subroutines of a source based Linux distro, #
# calls Sorcerer GNU/Linux, or SGL. SGL is no longer       #
# available with GPL license. Since this script was taken  #
# before licensing scheme change, no legal problems I      #
# guess.                                                   #
#                                                          #
# the code is re-written for Lunar. The previous Copyright #
# notices are kept; just in case some code is left :=)     #
# Kagan Kongar <kongar@tsrsb.org.tr>, 20020519             #
#                                                          #
############################################################
#                                                          #
# Copyright 2001 by Kyle Sallee                            #
#                                                          #
# Parts Copyrighted Hendrik Visage 2002 under GPLv2        #
#                                                          #
# Parts Copyrighted Kagan Kongar 2002 under GPLv2          #
#                                                          #
############################################################



# function : directories
# usage    : VARIABLE=`directories < dirlistfile`
# purpose  : to determine the directories from a given list
directories() {
  debug_msg "directories ($@)"
  while read ITEM ; do
    if [ -d "$ITEM" ] && [ ! -h "$ITEM" ] ; then
      echo "$ITEM"
    fi
  done
}


# function : files
# usage    : VARIABLE=`files < dirlistfile`
# purpose  : to determine the ordinary files from a given list
files() {
  debug_msg "files ($@)"
  while read ITEM ; do
    if [ -f "$ITEM" ] && [ ! -h "$ITEM" ] ; then
      echo "$ITEM"
    fi
  done
}


# function : sysmlinks
# usage    : VARIABLE=`symlinks < dirlistfile`
# purpose  : to determine the symbolic links from a given list
symlinks() {
  debug_msg "symlinks ($@)"
  while read ITEM ; do
    if [ -h "$ITEM" ] ; then
      echo "$ITEM"
    fi
  done
}


# function : dirnames
# usage    : VARIABLE=`dirnames < dirlistfile`
# purpose  : info about the real locations of symlinks
dirnames() {
  debug_msg "dirnames ($@)"
  while read FILE ; do
    dirname "$FILE"
  done
}


# function : exists
# usage    : VARIABLE=`exists < dirlistfile`
# purpose  : filter out the non-existent files in a list
exists() {
  debug_msg "exists ($@)"
  while read ITEM ; do
    if [ -e "$ITEM" ] ; then
      echo $ITEM
    fi
  done
}


# function : filter
# usage    : filter $FILE
# purpose  : filter stdin with files/dirs/symlinks provided in file $1.
filter() {
  debug_msg "filter ($@)"
  if [ -f "$1" ] ; then
    TMP_GREPRE=$(temp_create "fgrep")
    directories < $1 | sed -e 's:^:^:g' -e 's:$:/:g'   >> $TMP_GREPRE
    files       < $1 | sed -e 's:^:^:g' -e 's:$:\$:g' >> $TMP_GREPRE
    symlinks    < $1 | sed -e 's:^:^:g' -e 's:$:\$:g' >> $TMP_GREPRE
    read
    grep -v -f $TMP_GREPRE
    temp_destroy $TMP_GREPRE
  else
    cat
  fi
}


