#!/bin/bash
############################################################
#                                                          #
# lin - install Lunar modules                              #
#                                                          #
############################################################
# cast is part of the sorcery spell management utility     #
# Copyright 2001 by Kyle Sallee                            #
############################################################
#                                                          #
# this WAS the cast script of a source based Linux distro, #
# calls Sorcerer GNU/Linux, or SGL. SGL is no longer       #
# available with GPL license. Since this script was taken  #
# before licensing scheme change, no legal problems I      #
# guess.                                                   #
#                                                          #
# the code is re-written for Lunar. The previous Copyright #
# notices are kept; just in case some code is left :=)     #
# Kagan Kongar <kongar@tsrsb.org.tr>, 20020519             #
#                                                          #
############################################################
#                                                          #
# Parts Copyrighted Jason Johnston  2002 under GPLv2       #
#                                                          #
# Parts Copyrighted Kagan Kongar 2002 under GPLv2          #
#                                                          #
############################################################

help()	{
  cat  <<  EOF
Lin installs single or multiple modules

Example:	lin  nano hdparm sudo
Usage:		lin  [parameters]  [module]

Optional Parameters:

-f  |  --fix			Discover and fix broken modules
-n  |  --nofix			Discover, but do not fix broken modules
-d  |  --fixdepends             Discover and fix dependancy problems, but
                                do not recompile modules

-s				Download 1st, lin 2nd
    |  --deps			Configure modules and determine dependencies, 
				but do not lin.

-p  |  --probe                  Only lin if not already installed

-c  |  --compile		Ignore $INSTALL_CACHE and compiles
-r  |  --reconfigure		Select new dependencies for modules

       --from	directory	Specify an alternate for $SOURCE_CACHE
       --url	URL		Specify an alternate download URL

       --pam			re-lins all installed modules that
				can use Linux-PAM

EOF
  exit  1
}


main()	{
  process_parameters $@
  MODULES=$(strip_parameters $@)

  if echo $MODULES | grep -qw moonbase ; then
    # just update moonbase, no other modules
    MODULE=moonbase
    lin_module
    # remove moonbase rofm MODULES and continue
    MODULES=$(echo $MODULES | sed 's/moonbase//g')
  fi

  if [ -n "$FIX" ] ; then
    run_fix $MODULES
  else
    export D_LOG="/tmp/lunar.downloading.`uuidgen`"
    export PREPD="/tmp/lunar.prepd.`uuidgen`"
    rm -f $PREPD 2>/dev/null
    # pass 1 : run full dependancy checking
    # This pass does configuration and dependency identification.
    if ! build_depends $MODULES ; then
      exit 1
    elif [ -n "$DEPS_ONLY" ] ; then
      exit 0
    fi

    # pass 2 : hit the download manager button and grab a beer
    # this runs as a background process, so we are off to step #3 right away
    verbose_msg "Spawning download child"
    build_sources $MODULES &

    # pass 3 : compile/install
    # no strange stuff should happen here anymore
    lin_modules $MODULES
  
  fi
}


. /etc/lunar/config

export IFS="$STANDARD_IFS"

root_check
enviro_check
set_priority

if [ $# == 0 ] ; then 
  help | view_file
  exit
else
  main $@
fi


